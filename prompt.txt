Refactor the Admin.test.ts file (from "common" module) with the following instructions:

Phase 1: For each function from the contract (contracts/common/Admin.sol)
a. Check if the function parameters contains at least one of the following verification items:
- _signatures
- _validation
- _anchor
b. In the utils/models/<module_name>/<contract_name>.ts file, create two interfaces: "<function_name>ParamsInput" containing the non-verification parameters of the function, and "<function_name>Params" (extends "<function_name>ParamsInput") containing the verification parameters of the function.
c. If the function parameters contains _signatures: in the utils/signatures/<module_name>/<contract_name>.ts file, create the function "get<function_name>Signatures" that returns the signatures of the function from the "<function_name>ParamsInput" interface.
d. If the function parameters contains _validation: in the utils/validation/<module_name>/<contract_name>.ts file, create the function "get<function_name>Validation" that returns the validation of the function from the "<function_name>ParamsInput" interface.
e. If the function parameters contains _anchor:
- In the utils/models/<module_name>/<contract_name>.ts file:
+ Create two interfaces set: one for the corresponding non-safe function (only if such function exists in the contract), one for the safe function. Each interface set should contain two interfaces "<function_name>ParamsInput" and "<function_name>Params" (if there are other verification params) or one interface "<function_name>Params" (if _anchor is the only verification params)
- In the utils/anchor/<module_name>/<contract_name>.ts file, create the function "getSafe<function_name>Anchor" that returns the anchor of the function from the "<function_name>ParamsInput" interface (if exists) or the "<function_name>Params" interface.
- In the utils/transaction/<module_name>/<contract_name>.ts file, create the function "call<function_name>Tx" that returns the transaction of the function from the "<function_name>Params" interface.

Follow the corresponding files of ERC721Marketplace (from "lux" module) as examples.

Phase 2: In the test file:
- Replace all relative path imports ("./abc/xyz") with module import ("@abc/xyz")
- For all testcases of the function, change the test name to uppercase, rewrite the test to use the newly defined functions / interfaces from step 1.
